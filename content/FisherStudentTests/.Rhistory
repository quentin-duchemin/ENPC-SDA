# Chunk 8
Nadal_res <- Nadal_study(data[dates > 2010,]);
Nadal_res$pvals
Nadal_res$probasvictory
a <- c(1, 4, 3)
a
library('tidyverse')
data <- read_csv("Data.csv");
library('tidyverse')
data <- read_csv("../../data/tennis.csv");
big3 =  c('Federer R.','Nadal R.', 'Djokovic N.')
FvsN = ('Federer R.' == data$Winner[(data$Winner %in% big3[-3]) & (data$Loser %in% big3[-3])]);
FvsD = ('Federer R.' == data$Winner[(data$Winner %in% big3[-2]) & (data$Loser %in% big3[-2])]);
NvsD = ('Nadal R.' == data$Winner[(data$Winner %in% big3[-1]) & (data$Loser %in% big3[-1])]);
computeZstat <- function (seq1,seq2,level=0.05) {
n1 = length(seq1);
n2 = length(seq2);
bar1 = mean(seq1);
bar2 = mean(seq2);
bar = (sum(seq1)+sum(seq2))/(n1+n2);
Zstat = sqrt(n1*n2/(n1+n2))*(bar1-bar2)/sqrt(bar*(1-bar));
pvalue = 2*pnorm(-abs(Zstat),mean=0,sd=1);
return (data.frame(stat=Zstat, pval=pvalue));
}
resZtest <- computeZstat(FvsN,FvsD);
resZtest$pval
resZtest <- computeZstat(FvsN,FvsD);
resZtest$pval
resZtest <- computeZstat(1-FvsN,NvsD);
resZtest$pval;
resZtest <- computeZstat(1-FvsD,1-NvsD);
resZtest$pval;
Nadal_study <- function(df){
list_surfaces = c("Clay","Hard");
pvals = list();
probasNadalvictory = data.frame(matrix(ncol=length(list_surfaces),nrow=2));
colnames(probasNadalvictory) <- list_surfaces;
rownames(probasNadalvictory) <- c('Federer R.', 'Djokovic N.');
for (surface in list_surfaces){
FvsNsurface = ('Federer R.' == df$Winner[(df$Winner %in% big3[-3]) & (df$Loser %in% big3[-3]) & (df$Surface == surface)]);
NvsDsurface = ('Nadal R.' == df$Winner[(df$Winner %in% big3[-1]) & (df$Loser %in% big3[-1]) & (df$Surface == surface)]);
resZtest <- computeZstat(1-FvsNsurface,NvsDsurface);
pvals = append(pvals, resZtest$pval);
probasNadalvictory['Federer R.',surface] <- mean(1-FvsNsurface);
probasNadalvictory['Djokovic N.',surface] <- mean(NvsDsurface);
}
names(pvals) <- list_surfaces;
return (list(pvals=pvals,probasvictory=probasNadalvictory));
}
Nadal_res <- Nadal_study(data);
Nadal_res$pvals
Nadal_res$probasvictory
Nadal_res <- Nadal_study(data);
Nadal_res$pvals
print("p Values");
Nadal_res <- Nadal_study(data);
print("p Values");
Nadal_res$pvals
print("p Values \n");
print("p Values");
Nadal_res <- Nadal_study(data);
Nadal_res$pvals
Nadal_res$probasvictory
dates <- apply(select(data, Date), 1, function(x){ as.integer(substr(x,nchar(x)-3,nchar(x)));});
Nadal_res <- Nadal_study(data[dates <= 2010,]);
Nadal_res$pvals
Nadal_res$probasvictory
Nadal_res <- Nadal_study(data[dates > 2010,]);
Nadal_res$pvals
Nadal_res$probasvictory
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
# Convert the data as a table
dt <- as.table(as.matrix(df))
# Graph
balloonplot(t(dt), main ="workforce", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
ggdensity(df$F2000,
main = "Density plot of RFPLF in 2000",
xlab = "RFPLF")
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
library("gplots")
library(tidyverse)
library("ggpubr")
df <- read.csv('../../data/.csv');
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
ggdensity(df$F2000,
main = "Density plot of RFPLF in 2000",
xlab = "RFPLF")
ggdensity(df$F2013,
main = "Density plot of RFPLF in 2000",
xlab = "RFPLF")
ggdensity(df$F2000,
main = "Density plot of rates  of females  participating  in  the  labour  force in 2000",
xlab = "RFPLF")
ggdensity(df$F2013,
main = "Density plot of rates  of females  participating  in  the  labour  force in 2013",
xlab = "RFPLF")
ggdensity(df$F2013,
main = "Density plot of rates of females  participating  in  the  labour  force in 2013",
xlab = "RFPLF")
ggdensity(df$F2000,
main = "Density plot of rates of females  participating  in  the  labour  force in 2000",
xlab = "RFPLF")
ggdensity(df$F2013,
main = "Density plot of rates of females  participating  in  the  labour  force in 2013",
xlab = "RFPLF")
ggqqplot(df$F2000)
ggqqplot(df$F2013)
ggqqplot(df$F2000, title='Q-Q plot for the rates of females participating in the labour force in 2000')
ggqqplot(df$F2013, title='Q-Q plot for the rates of females participating in the labour force in 2013')
shapiro.test(df$F2000)
shapiro.test(df$F2013)
tfisher1 <- var.test(df$F2000, df$F2013, alternative = "two.sided", conf.level = 0.95);
tfisher1;
ttest1 <- t.test(df$F2000, df$F2013, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
ttest1
ttest2 <- t.test(df$F2013[df$Continent == 'Europe'], df$F2013[df$Continent != 'Europe'], alternative = "two.sided", conf.level = 0.95)
ttest2
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
library("gplots")
library(tidyverse)
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
install.packages("tidyverse")
install.packages("gplots")
install.packages("ggpubr")
```{r message = FALSE, warning = FALSE, echo = FALSE}
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
library("gplots")
library(tidyverse)
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
install.packages("tidyverse")
install.packages("gplots")
install.packages("ggpubr")
library("gplots")
library(tidyverse)
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
install.packages("tidyverse")
install.packages("gplots")
install.packages("ggpubr")
library("gplots")
library("tidyverse")
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
install.packages("tidyverse")
install.packages("gplots")
install.packages("ggpubr")
---
title: "Fisher and Student Tests: Workforce dataset"
output: html_notebook
editor_options:
chunk_output_type: inline
number_sections: true
toc: true
---
---
title: "Fisher and Student Tests: Workforce dataset"
output: html_notebook
number_sections: true
toc: true
---
---
title: "Fisher and Student Tests: Workforce dataset"
output: html_notebook
number_sections: true
toc: true
---
The Workforce dataset shows the labour force participation rates for males and females over time for several countries in Europe and North America. The data for this example were taken from the [worldbank website](http://wdi.worldbank.org/table/2.2) and records the labour force participation rates for males and females over time by country.
---
title: "Fisher and Student Tests: Workforce dataset"
output:
html_document:
toc: true
number_sections: true
---
The Workforce dataset shows the labour force participation rates for males and females over time for several countries in Europe and North America. The data for this example were taken from the [worldbank website](http://wdi.worldbank.org/table/2.2) and records the labour force participation rates for males and females over time by country.
---
title: "Fisher and Student Tests: Workforce dataset"
output: html_notebook
number_sections: true
toc: true
---
The Workforce dataset shows the labour force participation rates for males and females over time for several countries in Europe and North America. The data for this example were taken from the [worldbank website](http://wdi.worldbank.org/table/2.2) and records the labour force participation rates for males and females over time by country.
---
title: "Fisher and Student Tests: Workforce dataset"
output: html_notebook
---
---
title: "Fisher and Student Tests: Workforce dataset"
output: html_notebook
---
The Workforce dataset shows the labour force participation rates for males and females over time for several countries in Europe and North America. The data for this example were taken from the [worldbank website](http://wdi.worldbank.org/table/2.2) and records the labour force participation rates for males and females over time by country.
```{r message=FALSE, warning=FALSE, include=FALSE}
install.packages("gplots")
install.packages("gplots")
ggdensity(df$F2000,
main = "Density plot of rates of females participating in the labour force in 2000",
xlab = "RFPLF");
ggdensity(df$F2013,
main = "Density plot of rates of femalesparticipating in the labour force in 2013",
xlab = "RFPLF")
install.packages('tidyverse')
install.packages("gplots")
install.packages("ggpubr")
library("gplots")
library("tidyverse")
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
ggdensity(df$F2000,
main = "Density plot of rates of females participating in the labour force in 2000",
xlab = "RFPLF");
ggdensity(df$F2013,
main = "Density plot of rates of femalesparticipating in the labour force in 2013",
xlab = "RFPLF")
ggqqplot(df$F2000, title='Q-Q plot for the rates of females participating in the labour force in 2000')
ggqqplot(df$F2013, title='Q-Q plot for the rates of females participating in the labour force in 2013')
shapiro.test(df$F2000)
shapiro.test(df$F2013)
tfisher1 <- var.test(df$F2000, df$F2013, alternative = "two.sided", conf.level = 0.95);
tfisher1;
ttest1 <- t.test(df$F2000, df$F2013, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
ttest1
ttest2 <- t.test(df$F2013[df$Continent == 'Europe'], df$F2013[df$Continent != 'Europe'], alternative = "two.sided", conf.level = 0.95)
ttest2
library("gplots")
library("tidyverse")
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
ggdensity(df$F2000,
main = "Density plot of rates of females participating in the labour force in 2000",
xlab = "RFPLF");
ggdensity(df$F2013,
main = "Density plot of rates of femalesparticipating in the labour force in 2013",
xlab = "RFPLF")
ggqqplot(df$F2000, title='Q-Q plot for the rates of females participating in the labour force in 2000');
ggqqplot(df$F2013, title='Q-Q plot for the rates of females participating in the labour force in 2013')
shapiro.test(df$F2000);
shapiro.test(df$F2013)
tfisher1 <- var.test(df$F2000, df$F2013, alternative = "two.sided", conf.level = 0.95);
tfisher1;
ttest1 <- t.test(df$F2000, df$F2013, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
ttest1
ttest2 <- t.test(df$F2013[df$Continent == 'Europe'], df$F2013[df$Continent != 'Europe'], alternative = "two.sided", conf.level = 0.95)
ttest2
library("gplots")
library("tidyverse")
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
ggdensity(df$F2000,
main = "Density plot of rates of females participating in the labour force in 2000",
xlab = "RFPLF");
ggdensity(df$F2013,
main = "Density plot of rates of femalesparticipating in the labour force in 2013",
xlab = "RFPLF")
ggqqplot(df$F2000, title='Q-Q plot for the rates of females participating in the labour force in 2000');
ggqqplot(df$F2013, title='Q-Q plot for the rates of females participating in the labour force in 2013')
shapiro.test(df$F2000);
shapiro.test(df$F2013)
tfisher1 <- var.test(df$F2000, df$F2013, alternative = "two.sided", conf.level = 0.95);
tfisher1;
ttest1 <- t.test(df$F2000, df$F2013, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
ttest1
ttest2 <- t.test(df$F2013[df$Continent == 'Europe'], df$F2013[df$Continent != 'Europe'], alternative = "two.sided", conf.level = 0.95)
ttest2
library("gplots")
library("tidyverse")
library("ggpubr")
df <- read.csv('../../data/workforce.csv');
df <- na.omit(df);
colnames(df) <- c('Country', 'M2000' , 'M2013', 'F2000', 'F2013', 'Continent');
ggdensity(df$F2000,
main = "Density plot of rates of females participating in the labour force in 2000",
xlab = "RFPLF");
ggdensity(df$F2013,
main = "Density plot of rates of femalesparticipating in the labour force in 2013",
xlab = "RFPLF")
ggqqplot(df$F2000, title='Q-Q plot for the rates of females participating in the labour force in 2000');
ggqqplot(df$F2013, title='Q-Q plot for the rates of females participating in the labour force in 2013')
shapiro.test(df$F2000);
shapiro.test(df$F2013)
tfisher1 <- var.test(df$F2000, df$F2013, alternative = "two.sided", conf.level = 0.95);
tfisher1;
ttest1 <- t.test(df$F2000, df$F2013, alternative = "two.sided", paired = TRUE, conf.level = 0.95)
ttest1
ttest2 <- t.test(df$F2013[df$Continent == 'Europe'], df$F2013[df$Continent != 'Europe'], alternative = "two.sided", conf.level = 0.95)
ttest2
```{r, message = FALSE}
library(tidyverse)
library(car)
library(tidyverse)
library(car)
# Data import
---
```{r,message=FALSE}
lettuce <- read_csv("https://raw.githubusercontent.com/GTPB/PSLS20/master/data/freshweight_lettuce.txt")
#Take a glimpse at the data
glimpse(lettuce)
lettuce <- read_csv("https://raw.githubusercontent.com/GTPB/PSLS20/master/data/freshweight_lettuce.txt")
#Take a glimpse at the data
glimpse(lettuce)
First, we will set the `treatment` variable to a factor
```{r}
## treatment to factor
lettuce <- lettuce %>%
mutate(treatment = as.factor(treatment))
## treatment to factor
lettuce <- lettuce %>%
mutate(treatment = as.factor(treatment))
# Data exploration
```{r}
## Count the number of observations per treatment
lettuce %>%
count(treatment)
Now let's make a boxplot displaying the freshweight
of each treatment condition:
```{r}
lettuce %>%
ggplot(aes(x=treatment,y=freshweight,fill=treatment)) +
scale_fill_brewer(palette="RdGy") +
theme_bw() +
geom_boxplot(outlier.shape=NA) +
geom_jitter(width = 0.2) +
ggtitle("Boxplot of the freshweigth for each treatment condition") +
ylab("freshweight (gram)") +
stat_summary(fun.y=mean, geom="point", shape=5, size=3, color="black", fill="black")
lettuce %>%
ggplot(aes(x=treatment,y=freshweight,fill=treatment)) +
scale_fill_brewer(palette="RdGy") +
theme_bw() +
geom_boxplot(outlier.shape=NA) +
geom_jitter(width = 0.2) +
ggtitle("Boxplot of the freshweigth for each treatment condition") +
ylab("freshweight (gram)") +
stat_summary(fun.y=mean, geom="point", shape=5, size=3, color="black", fill="black")
Note that there are no clear outliers in the data.
We can see that the mean fresweight is very comparable
between the control and refoak treatments and between the
compost and cobc treatments. We can also see that the mean
freshweight is much higher in the cobc and control treatments
than in the control and refoak treatments. But is this
observed difference significant?
## Checking the assumptions for ANOVA
To study whether or not the observed difference between the
average freshweight values of the different treatment groups
are significant, we may perform an ANOVA.
The null hypothesis of ANOVA states that:
$H0$: The mean freshweigth is equal between the different treatment groups.
The alternative hypothesis of ANOVA states that:
$HA$: The mean freshweigth for at least one treatment group is different
from the mean freshweight in at least one other treatment group.
Before we may proceed with the analysis, we must make sure that all
assumptions for ANOVA are met. ANOVA has three assumptions:
1. The observations are independent of each other (in all groups)
2. The data (freshweigth) must be normally distributed (in all groups)
3. The variability within all groups is similar
### Assumption of independence
The first assumption is met; we started of with 28 lettuce plants and
we randomly submitted them to one of four treatment conditions. There
is no reason to believe that the plants display systematic differences
between treatment groups, other than the actual treatment.
**Question: What would happen if all of the control and refoak**
**plants were grown in 1 greenhouse and the other two conditions**
**were grown in another greenhouse?**
### Assumption of normality
For the second assumption, we must check normality in each group.
```{r}
## get qqplots for each individual treatment group
par(mfrow = c(2,2))
for(i in levels(lettuce$treatment)){
qqPlot(subset(lettuce,treatment == i)$freshweight, main = i, ylab = "")
}
## get qqplots for each individual treatment group
par(mfrow = c(2,2))
for(i in levels(lettuce$treatment)){
qqPlot(subset(lettuce,treatment == i)$freshweight, main = i, ylab = "")
}
```{r}
set.seed(5)
par(mfrow = c(3,2),mar=c(2, 4, 2, 0.2))
set.seed(5)
par(mfrow = c(3,2),mar=c(2, 4, 2, 0.2))
for (i in 1:6) {
x <- runif(7) ## sample 7 observations from a uniform distribution
qqPlot(x,ylab = "")
}
Even though the data originates from a uniform distribution, several
samples meet the normality requirements by chance.
Sample from normal distribution:
```{r}
set.seed(5)
par(mfrow = c(3,2),mar=c(2, 4, 2, 0.2))
for (i in 1:6) {
x <- rnorm(7) ## sample 7 sobservations from a normal distribution
qqPlot(x,ylab = "")
}
Even though the data originates from a normal distribution, several
samples do not meet the normality requirements by chance.
As an alternative, we may generate a qq-plot of the residuals
of a linear model. These residuals should be normally distributed
if the data for each treatment condition is normally distributed.
```{r}
fit <- lm(freshweight~treatment, lettuce)
plot(fit, which = 2,col = fit$model$treatment)
legend('bottomright', levels(fit$model$treatment), text.col = 1:4)
fit <- lm(freshweight~treatment, lettuce)
plot(fit, which = 2,col = fit$model$treatment)
legend('bottomright', levels(fit$model$treatment), text.col = 1:4)
The data seems to be approximately normally distributed,
with a slight left skew.
### Assumption of equal variances
We can check the assumption of equal variance with a boxplot:
```{r}
lettuce %>%
ggplot(aes(x=treatment,y=freshweight,fill=treatment)) +
scale_fill_brewer(palette="RdGy") +
theme_bw() +
geom_boxplot(outlier.shape=NA) +
geom_jitter(width = 0.2) +
ggtitle("Boxplot of the freshweigth for each treatment condition") +
ylab("freshweight (gram)") +
stat_summary(fun.y=mean, geom="point", shape=5, size=3, color="black", fill="black")
As a measure of variability, we may take the height
of each boxplot's box. This is the interval between
the 25% and 75% quantile. Here we can see that this
interval, as well as the length of the whiskers, is
approximately equal for most groups. However, the
variability of cobc does seem to be quite a bit larger
than the variability in the refoak group.
With this little observations per group, it is very
difficult to reliably assess the assumptions of normality and equal variances.
In this tutorial, we will assume that all assumptions are met.
**In a later tutorial, "Kruskal_lettuce_plants.Rmd",**
**we will see would happen if we decide to reject the assumptions.**
# Data analysis
## ANOVA
```{r}
fit <- lm(freshweight~treatment, data=lettuce)
fit_anova <- anova(fit)
fit_anova
fit <- lm(freshweight~treatment, data=lettuce)
fit_anova <- anova(fit)
fit_anova
The p-value of the ANOVA analysis is extremely significant
(p-value = `r format(fit_anova$"Pr(>F)"[1],digits=4)`),
so we reject the null hypothesis that the mean
freshweigth is equal for the different treatment groups.
We can say that the mean freshweigth is significantly different
between at least two treatment groups on the 5% significance level.
Based on this analysis, we do not yet know between which particular
groups there is a significant difference. To assess this, we will
perfrom the Tuckey post-hoc analysis.
## Post-hoc analysis
We will perform a post-hoc analysis to look at the difference
in fresweigth between each pairwise comparison of treatment groups.
Importantly, with this strategy, the p-values will be automatically
adjusted for multiple testing.
The null hypothesis for each pairwise test is that
$H0$ there is no difference in the average freshweight values between
both groups.
The alternative hypothesis for each pairwise test states that
$HA$ there is indeed a difference in the average freshweight values
between both groups.
```{r,message=FALSE}
library(multcomp, quietly = TRUE)
mcp <- glht(fit, linfct = mcp(treatment = "Tukey"))
mcp_summary <- summary(mcp)
library(multcomp, quietly = TRUE)
install.packages('multcomp')
library(multcomp, quietly = TRUE)
library(multcomp, quietly = TRUE)
mcp <- glht(fit, linfct = mcp(treatment = "Tukey"))
mcp_summary <- summary(mcp)
mcp_summary
#We will also calculate the confidence interval on the mean differences.
mcp_confint <- confint(mcp)
mcp_confint
#We will also calculate the confidence interval on the mean differences.
mcp_confint <- confint(mcp)
mcp_confint
